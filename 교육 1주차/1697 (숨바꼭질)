// https://www.acmicpc.net/problem/1697
// 그래프 이론, 그래프 탐색, 너비 우선 탐색
// 너비 우선으로 시간이 짧은 순서로 탐색

#include <iostream>
#include <queue>
#include <vector>
#include <string>
using namespace std;

int v[100001] = { 0, };
bool visit[100001] = { false, };

int main() {
	cin.tie(0);
	cin.sync_with_stdio(false);

	int n, k;
	cin >> n >> k;
	if (n == k) {
		cout << "0\n";
		return 0;
	}
	visit[n] = 1;
	queue<int> q;
	q.push(n);
	int temp;
	while (1) {
		temp = q.front();
		q.pop();
		if (temp - 1 >= 0 && !visit[temp-1]) {
			v[temp - 1] = v[temp] + 1;
            visit[temp-1]=1;
			if (temp - 1 == k) {
				cout << v[temp-1] << "\n";
				return 0;
			}
			q.push(temp-1);
		}
		if (temp + 1 <=100000  && !visit[temp+1]) {
			v[temp + 1] = v[temp] + 1;
            visit[temp+1]=1;
			if (temp + 1 == k) {
				cout << v[temp+1]<< "\n";
				return 0;
			}
			q.push(temp + 1);
		}
		if (2*temp <= 100000 && !visit[2*temp]) {
			v[2*temp] = v[temp] + 1;
            visit[temp*2]=1;
			if (2*temp == k) {
				cout << v[2*temp] << "\n";
				return 0;
			}
			q.push(temp*2);
		}
	}

	return 0;
}
