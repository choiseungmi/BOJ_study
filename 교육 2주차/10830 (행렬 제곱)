https://www.acmicpc.net/problem/10830
// 이분탐색
// 이분탐색을 이용한 행렬 제곱

#include <vector>
#include <iostream>
using namespace std;

vector <vector<long long>> a;
long long n;

vector<vector<long long>> f(long long b) {
	if (b == 1) {
		return a;
	}
	vector<vector<long long>> temp(n, vector<long long>(n, 0));
	vector<vector<long long>> ans = f(b / 2);
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			for (int k = 0; k < n; k++) {
				temp[i][j] += ((ans[i][k] * ans[k][j]) % 1000);
				temp[i][j] %= 1000;
			}
		}
	}
	if (b % 2 == 0) {
		return temp;
	}
	else {
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				ans[i][j] = 0;
				for (int k = 0; k < n; k++) {
					ans[i][j] += ((temp[i][k] * a[k][j]) % 1000);
					ans[i][j] %= 1000;
				}
			}
		}
		return ans;
	}
}

int main() {
	cin.tie(0);
	cin.sync_with_stdio(false);
	long long b;
	cin >> n >> b;
	for (int i = 0; i < n; i++) {
		vector<long long> v(n);
		for (int j = 0; j < n; j++) {
			cin >> v[j];
		}
		a.push_back(v);
	}
	vector<vector<long long>> ans = f(b);

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			cout << ans[i][j]%1000 << " ";
		}
		cout << "\n";
	}
	return 0;
}
