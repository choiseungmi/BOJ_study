https://www.acmicpc.net/problem/11725
// 트리
// 너비탐색을 이용한 부모노드 찾기

#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>
#include <set>
using namespace std;

bool visit[100001] = { 0, };
int v[100001] = { 0, };

int main() {
	cin.tie(0);
	cin.sync_with_stdio(false);

	int n, t1, t2;
	cin >> n;
	vector<vector<int>> v2(n+1, vector<int>());
	for (int i = 0; i < n - 1; i++) {
		cin >> t1 >> t2;
		v2[t1].push_back(t2);
		v2[t2].push_back(t1);
	}
	visit[1] = 1;
	queue<int> q;
	q.push(1);
	while (!q.empty()) {
		int x = q.front();
		q.pop();
		for (int i = 0; i < v2[x].size(); i++) {
			if (!visit[v2[x][i]]) {
				v[v2[x][i]] = x;
				visit[v2[x][i]] = 1;
				q.push(v2[x][i]);
			}
		}
	}
	for (int i = 2; i <= n; i++) {
		cout << v[i] << "\n";
	}
	return 0;
}
